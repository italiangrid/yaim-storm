##############################################################################
# Copyright (c) Members of the EGEE Collaboration. 2004.
# See http://www.eu-egee.org/partners/ for details on the copyright
# holders.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS
# OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##############################################################################
#
# NAME :        config_gip_storm
#
# DESCRIPTION : This function configures the published information on a StoRM SE.
#
# AUTHORS :     grid-release@infn.it
#
# NOTES :
#
# YAIM MODULE:  yaim-storm
#
##############################################################################

function config_gip_storm_check () {

  requires $1 SITE_NAME VOS STORM_BACKEND_HOST STORM_DEFAULT_ROOT \
              STORM_FRONTEND_PATH STORM_FRONTEND_PORT STORM_FRONTEND_PUBLIC_HOST \
              STORM_BACKEND_REST_SERVICES_PORT STORM_STORAGEAREA_LIST \
              STORM_ENDPOINT_QUALITY_LEVEL STORM_ENDPOINT_CAPABILITY \
              STORM_INFO_OVERWRITE MY_DOMAIN
  return $?
}

function remove_file() {

  for f in $1; do
    yaimlog DEBUG "${FUNCTION}: Removing $f ..."
    rm -f $f
  done
}

function remove_old_cron_files() {

  remove_file "/etc/cron.d/glite-info-dynamic-storm"
  remove_file "/etc/cron.d/glite-info-glue2-dynamic-storm"
}

function remove_old_bdii_files() {

  # remove v1.7.6 files
  remove_file "/var/lib/bdii/gip/ldif/static-file-storm.ldif*"
  remove_file "/var/lib/bdii/gip/ldif/static-file-glue2-storm.ldif*"
  remove_file "/var/lib/bdii/gip/plugin/glite-info-dynamic-storm"
  remove_file "/var/lib/bdii/gip/plugin/glite-info-glue2-dynamic-storm"
  remove_file "/var/lib/bdii/gip/provider/service-srm-storm-v2"
  remove_file "/var/lib/bdii/gip/provider/service-glue2-srm-storm-v2"
  remove_file "/etc/storm/backend-server/storm-yaim-variables.conf"
  remove_file "/etc/glite/info/service/glite-info-service-srm-storm-v2.conf"
  remove_file "/etc/glite/info/service/glite-info-service-glue2-srm-storm-v2.conf"
}

function config_gip_storm() {

  FUNCTION="config_gip_storm"

  remove_old_cron_files
  remove_old_bdii_files

  # Create configuration file for dynamic information provider
  FILE="/etc/storm/info-provider/storm-yaim-variables.conf"
  yaimlog INFO "${FUNCTION}: Creating ${FILE} ..."
  set | egrep '^STORM|^SITE_NAME|^VOS|^MY_DOMAIN' | sort > ${FILE}
  chgrp ldap /etc/storm/info-provider/storm-yaim-variables.conf
  chmod 450 ${FILE}

  LOGGING_LEVEL=20
  if [ ${YAIM_LOGGING_LEVEL} == DEBUG ]; then
    LOGGING_LEVEL=10
  fi

  if [ ${STORM_GRIDHTTPS_ENABLED} ]
  then
    (cat << EOF
      STORM_GRIDHTTPS_ENABLED won't be supported by next releases.
      Please use STORM_WEBDAV_POOL_LIST instead.
      Read more info at http://italiangrid.github.io/storm/release-notes/StoRM-v1.11.15.html
EOF
    ) | yaimlog WARNING
  fi

  /usr/libexec/storm-info-provider -v ${LOGGING_LEVEL} configure -f ${FILE}

  if [ $? -eq 0 ]
  then
    yaimlog INFO "${FUNCTION}: Successfully configured info-provider"
  else
    yaimlog ERROR "${FUNCTION}: Info-provider configuration failed!"
    return 1
  fi

  yaimlog DEBUG "${FUNCTION}: FINISHED"
}
